#pragma once

// GVR data formats
#define GJD_TEXFMT_ARGB_I4            (0x00)
#define GJD_TEXFMT_ARGB_I8            (0x01)
#define GJD_TEXFMT_ARGB_IA4           (0x02)
#define GJD_TEXFMT_ARGB_IA8           (0x03)
#define GJD_TEXFMT_RGB_565            (0x04)
#define GJD_TEXFMT_ARGB_5A3           (0x05)
#define GJD_TEXFMT_ARGB_8888		  (0x06)

#define GJD_TEXFMT_PALETTIZE4		  (0x08)
#define GJD_TEXFMT_PALETTIZE8		  (0x09)
#define GJD_TEXFMT_DXT1				  (0x0E)

// GVM flags
#define GVMH_NAMES					  (0x1)
#define GVMH_FORMATS				  (0x2)
#define GVMH_DIMENSIONS				  (0x4)
#define GVMH_GBIX					  (0x8)

// GVR surface flags
#define GJD_SURFACEFLAGS_MIPMAPED     (0x80000000)
#define GJD_SURFACEFLAGS_VQ           (0x40000000)
#define GJD_SURFACEFLAGS_NOTWIDDLED   (0x04000000)
#define GJD_SURFACEFLAGS_TWIDDLED     (0x00000000)
#define GJD_SURFACEFLAGS_STRIDE       (0x02000000)
#define GJD_SURFACEFLAGS_PALETTIZED   (0x00008000)

// Locked surface struct from sega of china api, imma use it cuz its easy to decompile like this
struct LockedSurface
{
	void* m_pBaseAddr;
	int m_Pitch;
	IDirect3DTexture8* m_pLockedTexture;
	int m_MipmapLevel;
	bool m_IsLocked;
};

unsigned char PAKFormatLookupTable[] =
{
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
  0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x16, 0x00,
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x06, 0x00,
  0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x1A, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x1C, 0x00,
  0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00,
  0x0A, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0B, 0x00,
  0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x32, 0x00,
  0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x44, 0x58, 0x54, 0x31,
  0x0F, 0x00, 0x00, 0x00, 0x44, 0x58, 0x54, 0x32, 0x10, 0x00,
  0x00, 0x00, 0x44, 0x58, 0x54, 0x33, 0x11, 0x00, 0x00, 0x00,
  0x44, 0x58, 0x54, 0x34, 0x12, 0x00, 0x00, 0x00, 0x44, 0x58,
  0x54, 0x35, 0x13, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00,
  0x14, 0x00, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x15, 0x00,
  0x00, 0x00, 0x4B, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00,
  0x4D, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x50, 0x00,
  0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00,
  0x19, 0x00, 0x00, 0x00, 0x6F, 0x00, 0x00, 0x00, 0x1A, 0x00,
  0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x1B, 0x00, 0x00, 0x00,
  0x71, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x72, 0x00,
  0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00,
  0x1E, 0x00, 0x00, 0x00, 0x74, 0x00, 0x00, 0x00
};